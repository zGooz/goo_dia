<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// base

randomize();
math_set_epsilon(0.11);
draw_set_circle_precision(64);
draw_set_font(fnt_main);
draw_set_colour(make_colour_hsv(12, 75, 255));
image_speed = 0;
view_enabled = 1;
alarm_set(0, 10); 
is_drag = 0;     

hview_min = view_hview[view_current];
wview_min = hview_min * RATIO;
hview_max = view_hview[view_current] + 1000;
wview_max = hview_max * RATIO;

global.ID = noone;
global.Depth = 0;       
cursor_sprite = spr_cursor;  
global.Msg = noone
global.Helper = noone;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// param                   

enum list_box 
{ LB_SINGLE   = 3,  
  LB_MULTIPLE = 4 
};

enum scroll_bar 
{ SB_HOR = 5, 
  SB_VER = 6
}; 
 
enum progress_bar 
{ PB_CIRCLE = 7,   
  PB_LINE   = 8
};
 
enum slider
{ S_HOR = 9, 
  S_VER = 10, 
}; 
  
enum button
{ CB_CHECK  = 11,
  CB_RADIO  = 12,
  CB_TOGGLE = 13,
  
  BTN_PLAIN = 14,
  BTN_SPLIT = 15,
  BTN_CICLE = 16 
};     
  
enum text_box
{ TB_UNDO = 17, 
  TB_REDO = 18, 
  TB_EDIT = 19 
};  
   
enum tb_change 
{ _ITC = 20, 
  _CTI = 21 
};
  
enum tb_buffer 
{ BUF_OLD = 22, 
  BUF_NEW = 23 
};

enum tb_key
{ TB_UP     = 24,
  TB_DOWN   = 25,
  TB_LEFT   = 26,
  TB_RIGHT  = 27,
  TB_P_UP   = 28,
  TB_P_DOWN = 29,
  TB_HOME   = 30,
  TB_END    = 31,
  TB_TAB    = 32
}; 

enum line_limit 
{ LIM_HOR = 33, 
  LIM_VER = 34 
}; 

enum drop_down
{ DD_DROP  = 35,
  DD_COMBO = 36 
};
  
enum image_view 
{ IV_SINGLE   = 37,  
  IV_MULTIPLE = 38 
};
  
enum accordion 
{ ACN_SINGLE = 39,
  ACN_LB_MULTIPLE = 40
}; 

enum tree_view
{ TREE_NAME = 41,
  TREE_LEVEL = 42,
  TREE_STATE = 43,
  TREE_TYPE = 44,
  TREE_POSITION = 45
};
  
enum tree_type
{ TT_CARRIER = 46,
  TT_ITEM = 47
};
  
enum dd_child
{ DC_LIST_BOX = 0,
  DC_TEXT_BOX = 1
}; 

enum msg_box 
{ MSG_COUNT = 2,
  MSG_HOR = 48,
  MSG_VER = 49 
};
  
enum spin_child { SPC_TEXT_BOX = 0 };  
enum encoder_child { EC_PRG_BAR = 0 };             

SYM_W = string_width('Q');
SYM_H = string_height('Q'); 
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// load

enum Language
{ L_ENG,
  L_RUS
};

if file_exists("user_config.txt")
{ var f = file_text_open_read("user_config.txt");
  global.volume_snd = file_text_read_real(f);
  file_text_readln(f);
  global.volume_msk = file_text_read_real(f);
  file_text_readln(f);
  global.full_screen = file_text_read_real(f);
  file_text_readln(f);
  global.use_shader = file_text_read_real(f);
  file_text_readln(f);
  global.language = file_text_read_real(f);
  file_text_close(f);
}
else
{ global.volume_snd = 1;
  global.volume_msk = 1;
  global.full_screen = WINDOW_MODE;
  global.use_shader = 1;
  global.language = Language.L_ENG;
}

global.em_snd = audio_emitter_create();
global.em_msk = audio_emitter_create();
audio_emitter_gain(global.em_snd, global.volume_snd);
audio_emitter_gain(global.em_msk, global.volume_msk); 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.Helper = instance_create(x, y, obj_help);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !instance_exists(global.Helper) exit;
if instance_exists(obj_message_box) exit;
if instance_exists(obj_editor) exit;

var a = array_create(3);
a[0] = " save ";
a[1] = " load ";
a[2] = " export ";

for (var j = 0; j &lt; array_length_1d(a); j++)
{ var xx = 32 + 32 * j;

  if point_in_rectangle(MOUSE_X, MOUSE_Y, xx, 16, xx + 16, 32)
  { global.Helper.help = a[j];
    exit; break;
  }
}                        

with global.ID 
{ if instance_exists(obj_message_box) exit;
  if instance_exists(obj_editor) exit;  
  
  var cx = x + width - SYM_H;
  var cy = y + height - SYM_H;
  
  if point_in_rectangle(mouse_x, mouse_y, cx, cy, cx + SYM_H, cy + SYM_H)
  { global.Helper.help = " shift(move) dialog ";
    exit;
  }
  
  var _x = x + SYM_H; 
  var xxx = x + width - (SYM_H &lt;&lt; 1);
  xxxx = xxx + SYM_H;
  
  if point_in_rectangle(mouse_x, mouse_y, xxx, y, xxxx, y + SYM_H)
  { global.Helper.help = " delete this dialog ";
    exit;
  }
  
  if point_in_rectangle(mouse_x, mouse_y, xxxx, y, xxxx + SYM_H, y + SYM_H)
  { global.Helper.help = " conservation mode ";
  
    if kill
       global.Helper.help = " annihilation regime ";
    exit;
  }
  
  if point_in_rectangle(mouse_x, mouse_y, _x, y, xxx, y + SYM_H)
  { global.Helper.help = " edit dialog ";   
    exit;
  }
  
  var xx = x + count * SYM_W;  
  var _y;
  
  for (var i = 1; i &lt; Size; i++)
  { _y = y + SYM_H * i;
  
    if point_in_rectangle(mouse_x, mouse_y, x, _y, xx, _y + SYM_H)
    { global.Helper.help = " edit phrase ";
      exit; break;
    }  
    
    if point_in_rectangle(mouse_x, mouse_y, xx, _y, xx + SYM_H, _y + SYM_H)
    { if Size &gt; 2
      { global.Helper.help = " delete phrase or child "; 
        exit; break;
      }
    }                    
    
    if instance_exists(obj_pointer)
    { with obj_dialog
      { if id == other.id continue; 
      
        if point_in_rectangle(mouse_x, mouse_y, x, y, x + SYM_H, y + SYM_H)
        { global.Helper.help = " establish a connection ";
          exit; break;
        }
      }
    }                                
  }
  _y = y + SYM_H * Size;
  
  if point_in_rectangle(mouse_x, mouse_y, xx, _y, xx + SYM_H, _y + SYM_H)
  { global.Helper.help = " add phrase ";
    exit;
  }
}
   
global.Helper.help = "";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if is_drag
{ view_xview[view_current] = view_xview[view_current] + drag_x - mouse_x; 
  view_yview[view_current] = view_yview[view_current] + drag_y - mouse_y;  
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="40">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(obj_message_box) exit;
if instance_exists(obj_editor) exit;

if keyboard_check(vk_control)
{ view_hview[view_current] = max(view_hview[view_current] - 2, hview_min);
  view_wview[view_current] = max(view_hview[view_current] * RATIO, wview_min);
  exit;
}
view_yview[view_current] = view_yview[view_current] + 3;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="39">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(obj_message_box) exit;
if instance_exists(obj_editor) exit;
view_xview[view_current] = view_xview[view_current] + 3;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="38">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(obj_message_box) exit;
if instance_exists(obj_editor) exit;

if keyboard_check(vk_control)
{ view_hview[view_current] = min(view_hview[view_current] + 2, hview_max);
  view_wview[view_current] = min(view_hview[view_current] * RATIO, wview_max);
  exit;
}
view_yview[view_current] = view_yview[view_current] - 3;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="37">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(obj_message_box) exit;
if instance_exists(obj_editor) exit;
view_xview[view_current] = view_xview[view_current] - 3;             
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="61">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(obj_message_box) exit;
if instance_exists(obj_editor) exit;
view_hview[view_current] = max(view_hview[view_current] - 2, hview_min);
view_wview[view_current] = max(view_hview[view_current] * RATIO, wview_min);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="60">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(obj_message_box) exit;
if instance_exists(obj_editor) exit;
view_hview[view_current] = min(view_hview[view_current] + 2, hview_max);
view_wview[view_current] = min(view_hview[view_current] * RATIO, wview_max);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="58">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(obj_message_box) exit;
if instance_exists(obj_editor) exit;
is_drag = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="55">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(obj_message_box) exit;
if instance_exists(obj_editor) exit;
is_drag = true; 
drag_x = mouse_x; 
drag_y = mouse_y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="54">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(obj_editor) exit;
if instance_exists(obj_pointer) exit;
global.ID = instance_create(mouse_x, mouse_y, obj_dialog); 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// dia

with global.ID
{ if instance_exists(obj_message_box) exit;
  if instance_exists(obj_editor) exit;
  
  var cx = x + width - SYM_H;
  var cy = y + height - SYM_H;
  
  if point_in_rectangle(mouse_x, mouse_y, cx, cy, cx + SYM_H, cy + SYM_H)
  { Shift = 1;
    exit;
  }
  
  var v = List[| 0];
  if is_undefined(v) exit;
  var s = string_cut_end(v, count); 
  var _x = x + SYM_H; 
  var xxx = x + width - (SYM_H &lt;&lt; 1);
  xxxx = xxx + SYM_H;
  
  if point_in_rectangle(mouse_x, mouse_y, xxx, y, xxxx, y + SYM_H)
  { for (var q = 0; q &lt; Size; q++)
    { var v = Active[| q];
      if is_undefined(v) continue;    
      with v exist = max(--exist, 0); 
    }
    
    event_user(0);
    instance_destroy();
    exit;
  }
  
  if point_in_rectangle(mouse_x, mouse_y, xxxx, y, xxxx + SYM_H, y + SYM_H)
  { kill = !kill;
    exit;
  }
  
  if point_in_rectangle(mouse_x, mouse_y, _x, y, xxx, y + SYM_H)
  { var j = instance_create(x, y, obj_editor); 
    v = string_replace_all(v, chr(13), KEY);
    v = string_replace_all(v, chr(35), KEY);
    j.Parent = id;
    j.Index = 0;  
    j.Old = v;
    j.Scr = "";
    textbox_set_data(j.Tbox, v);   
    exit;
  }
  
  var xx = x + count * SYM_W; 
  _x = xx + SYM_H;
  var _y;
  
  for (var i = 1; i &lt; Size; i++)
  { _y = y + SYM_H * i;
    v = List[| i];
    var t = Script[| i];
    if is_undefined(v) continue;
    if is_undefined(t) continue;
    
    if point_in_rectangle(mouse_x, mouse_y, x, _y, xx, _y + SYM_H)
    { var j = instance_create(x, y, obj_editor); 
      j.is_field_script = 1;
      v = string_replace_all(v, chr(13), KEY);
      v = string_replace_all(v, chr(35), KEY);
      t = string_replace_all(t, chr(13), KEY);
      t = string_replace_all(t, chr(35), KEY);
      j.Parent = id;
      j.Index = i;  
      j.Old = v;
      j.Scr = t;
      textbox_set_data(j.Tbox, v);
      break;
    }  
    
    if point_in_rectangle(mouse_x, mouse_y, xx, _y, xx + SYM_H, _y + SYM_H)
    { if Size &gt; 2
      { var a = Active[| i];
      
        if is_undefined(a) 
        { exit; 
          break; 
        }
        
        if instance_exists(a)
        { a.exist = max(--a.exist, 0);
        
          if a.object_index == obj_pointer
             instance_destroy(obj_pointer);
          else
          { if kill
               with a event_user(1);
          }
        }
           
        ds_list_delete(List, i); 
        ds_list_delete(Active, i);
        ds_list_delete(Script, i);
        var p = Path[| i];
        ds_list_delete(Path, i);     
        Size = ds_list_size(List); 
        height = (Size + 1) * SYM_H;  
        refresh_curve();   
        if is_undefined(p) { exit; break; }
        if path_exists(p) path_delete(p);  
        exit; break;
      }
    }                    
    
    if !instance_exists(obj_pointer)
    { if point_in_rectangle(mouse_x, mouse_y, _x, _y, _x + SYM_H, _y + SYM_H)
      { var j = instance_create(mouse_x, mouse_y, obj_pointer); 
        j.number = i;
        j.parent = id;
        Active[| i] = j;
        break;
      }            
    }   
    else
    { with obj_dialog
      { if id == other.id continue; 
      
        if point_in_rectangle(mouse_x, mouse_y, x, y, x + SYM_H, y + SYM_H)
        { with other
          { var j = obj_pointer.number;
            Active[| j] = other.id;
            other.exist++;     
            instance_destroy(obj_pointer);
          } exit; break;
        }
      }
    }                                
  }
  _y = y + SYM_H * Size;
  
  if point_in_rectangle(mouse_x, mouse_y, xx, _y, xx + SYM_H, _y + SYM_H)
  { ds_list_add(List, " phrase default ");
    ds_list_add(Active, noone);
    ds_list_add(Script, "");
    var p = path_add();
    path_set_closed(p, 0);
    path_set_kind(p, 1);
    path_set_precision(p, 8);  
    ds_list_add(Path, p);
    Size = ds_list_size(List);
    height = (Size + 1) * SYM_H;     
  }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// gui

if messagebox_get_click(global.Msg)
{ global.Msg = noone;
  exit;
}

var a = array_create(3);
a[0] = asset_get_index("dia_edit_save");
a[1] = asset_get_index("dia_edit_load");
a[2] = asset_get_index("dia_edit_export");

for (var j = 0; j &lt; array_length_1d(a); j++)
{ var xx = 32 + 32 * j;

  if point_in_rectangle(MOUSE_X, MOUSE_Y, xx, 16, xx + 16, 32)
  { if script_exists(a[j])
       script_execute(a[j]);
       
    exit; break;
  }
}

with obj_dialog
{ if point_in_rectangle(mouse_x, mouse_y, x, y, x + width, y + height)
  &amp;&amp; !point_in_rectangle(mouse_x, mouse_y, x, y, x + SYM_H, y + SYM_H)
  { global.ID = id;  
    var cx = x + width - SYM_H;
    var cy = y + height - SYM_H;
    
    if point_in_rectangle(mouse_x, mouse_y, cx, cy, cx + SYM_H, cy + SYM_H)
       Shift = 1;
       
    break;
  }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// rooms param

if room != rm_work
{ var r = rm_work;  
  var wgw = 1200;
  var wgh = 600;
  screen_set_mode_ext(wgw, wgh, 0, 0);
  
  view_wport[view_current] = wgw;
  view_hport[view_current] = wgh;  
  
  room_set_width(r, wgw * 10);
  room_set_height(r, wgh * 10);
  room_set_view_enabled(r, 1);
  room_set_view(r, 0, 1, 0, 0, wgw, wgh, 0, 0, wgw, wgh, 0, 0, 0, 0, noone);               
  room_goto(r);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// save

var f = file_text_open_write("user_config.txt");
file_text_write_real(f, global.volume_snd);
file_text_writeln(f);
file_text_write_real(f, global.volume_msk);
file_text_writeln(f);
file_text_write_real(f, global.full_screen);
file_text_writeln(f);
file_text_write_real(f, global.use_shader);
file_text_writeln(f);
file_text_write_real(f, global.language);
file_text_close(f);

audio_emitter_free(global.em_snd);
audio_emitter_free(global.em_msk);                           
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// free
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// draw GUI element       

var a = array_create(3);
a[0] = sprite_get_texture(spr_menu, 0);
a[1] = sprite_get_texture(spr_menu, 1);
a[2] = sprite_get_texture(spr_menu, 2);

for (var j = 0; j &lt; array_length_1d(a); j++)
{ var xx = 32 + 32 * j;
  auto_draw_rectangle(xx, 16, a[j], 16, 16);
}                 
messagebox_draw(global.Msg, -1, c_dkgray, c_orange);                                    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>game_end();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
